#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Geo_Lab_Online.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Geolab")]
	public partial class ExtDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertExtUser(ExtUser instance);
    partial void UpdateExtUser(ExtUser instance);
    partial void DeleteExtUser(ExtUser instance);
    partial void InsertExtUser_Category(ExtUser_Category instance);
    partial void UpdateExtUser_Category(ExtUser_Category instance);
    partial void DeleteExtUser_Category(ExtUser_Category instance);
    partial void InsertExtDirection(ExtDirection instance);
    partial void UpdateExtDirection(ExtDirection instance);
    partial void DeleteExtDirection(ExtDirection instance);
    partial void InsertExtDirection_Tran(ExtDirection_Tran instance);
    partial void UpdateExtDirection_Tran(ExtDirection_Tran instance);
    partial void DeleteExtDirection_Tran(ExtDirection_Tran instance);
    partial void InsertExtCourse(ExtCourse instance);
    partial void UpdateExtCourse(ExtCourse instance);
    partial void DeleteExtCourse(ExtCourse instance);
    partial void InsertExtCourse_Tran(ExtCourse_Tran instance);
    partial void UpdateExtCourse_Tran(ExtCourse_Tran instance);
    partial void DeleteExtCourse_Tran(ExtCourse_Tran instance);
    partial void InsertExtSubject_Tran(ExtSubject_Tran instance);
    partial void UpdateExtSubject_Tran(ExtSubject_Tran instance);
    partial void DeleteExtSubject_Tran(ExtSubject_Tran instance);
    partial void InsertExtSubject(ExtSubject instance);
    partial void UpdateExtSubject(ExtSubject instance);
    partial void DeleteExtSubject(ExtSubject instance);
    partial void InsertExtCourse_Subject(ExtCourse_Subject instance);
    partial void UpdateExtCourse_Subject(ExtCourse_Subject instance);
    partial void DeleteExtCourse_Subject(ExtCourse_Subject instance);
    partial void InsertExtSubject_Lecturer(ExtSubject_Lecturer instance);
    partial void UpdateExtSubject_Lecturer(ExtSubject_Lecturer instance);
    partial void DeleteExtSubject_Lecturer(ExtSubject_Lecturer instance);
    partial void InsertCourse_MainLecturer(Course_MainLecturer instance);
    partial void UpdateCourse_MainLecturer(Course_MainLecturer instance);
    partial void DeleteCourse_MainLecturer(Course_MainLecturer instance);
    #endregion
		
		public ExtDbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GeolabConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ExtDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExtDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExtDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExtDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ExtUser> ExtUsers
		{
			get
			{
				return this.GetTable<ExtUser>();
			}
		}
		
		public System.Data.Linq.Table<ExtUser_Category> ExtUser_Categories
		{
			get
			{
				return this.GetTable<ExtUser_Category>();
			}
		}
		
		public System.Data.Linq.Table<ExtDirection> ExtDirections
		{
			get
			{
				return this.GetTable<ExtDirection>();
			}
		}
		
		public System.Data.Linq.Table<ExtDirection_Tran> ExtDirection_Trans
		{
			get
			{
				return this.GetTable<ExtDirection_Tran>();
			}
		}
		
		public System.Data.Linq.Table<ExtCourse> ExtCourses
		{
			get
			{
				return this.GetTable<ExtCourse>();
			}
		}
		
		public System.Data.Linq.Table<ExtCourse_Tran> ExtCourse_Trans
		{
			get
			{
				return this.GetTable<ExtCourse_Tran>();
			}
		}
		
		public System.Data.Linq.Table<ExtSubject_Tran> ExtSubject_Trans
		{
			get
			{
				return this.GetTable<ExtSubject_Tran>();
			}
		}
		
		public System.Data.Linq.Table<ExtSubject> ExtSubjects
		{
			get
			{
				return this.GetTable<ExtSubject>();
			}
		}
		
		public System.Data.Linq.Table<ExtCourse_Subject> ExtCourse_Subjects
		{
			get
			{
				return this.GetTable<ExtCourse_Subject>();
			}
		}
		
		public System.Data.Linq.Table<ExtSubject_Lecturer> ExtSubject_Lecturers
		{
			get
			{
				return this.GetTable<ExtSubject_Lecturer>();
			}
		}
		
		public System.Data.Linq.Table<Course_MainLecturer> Course_MainLecturers
		{
			get
			{
				return this.GetTable<Course_MainLecturer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class ExtUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _UserName;
		
		private string _UserSurname;
		
		private string _UserBio;
		
		private string _UserPhoto;
		
		private string _UserEmail;
		
		private string _UserPassword;
		
		private string _UserMobileNumber;
		
		private System.Nullable<int> _UserPN;
		
		private string _UserAddress;
		
		private System.Nullable<System.DateTime> _UserBirthDay;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntitySet<ExtUser_Category> _ExtUser_Categories;
		
		private EntitySet<ExtSubject_Lecturer> _ExtSubject_Lecturers;
		
		private EntitySet<Course_MainLecturer> _Course_MainLecturers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserSurnameChanging(string value);
    partial void OnUserSurnameChanged();
    partial void OnUserBioChanging(string value);
    partial void OnUserBioChanged();
    partial void OnUserPhotoChanging(string value);
    partial void OnUserPhotoChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnUserMobileNumberChanging(string value);
    partial void OnUserMobileNumberChanged();
    partial void OnUserPNChanging(System.Nullable<int> value);
    partial void OnUserPNChanged();
    partial void OnUserAddressChanging(string value);
    partial void OnUserAddressChanged();
    partial void OnUserBirthDayChanging(System.Nullable<System.DateTime> value);
    partial void OnUserBirthDayChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public ExtUser()
		{
			this._ExtUser_Categories = new EntitySet<ExtUser_Category>(new Action<ExtUser_Category>(this.attach_ExtUser_Categories), new Action<ExtUser_Category>(this.detach_ExtUser_Categories));
			this._ExtSubject_Lecturers = new EntitySet<ExtSubject_Lecturer>(new Action<ExtSubject_Lecturer>(this.attach_ExtSubject_Lecturers), new Action<ExtSubject_Lecturer>(this.detach_ExtSubject_Lecturers));
			this._Course_MainLecturers = new EntitySet<Course_MainLecturer>(new Action<Course_MainLecturer>(this.attach_Course_MainLecturers), new Action<Course_MainLecturer>(this.detach_Course_MainLecturers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSurname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserSurname
		{
			get
			{
				return this._UserSurname;
			}
			set
			{
				if ((this._UserSurname != value))
				{
					this.OnUserSurnameChanging(value);
					this.SendPropertyChanging();
					this._UserSurname = value;
					this.SendPropertyChanged("UserSurname");
					this.OnUserSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserBio", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string UserBio
		{
			get
			{
				return this._UserBio;
			}
			set
			{
				if ((this._UserBio != value))
				{
					this.OnUserBioChanging(value);
					this.SendPropertyChanging();
					this._UserBio = value;
					this.SendPropertyChanged("UserBio");
					this.OnUserBioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPhoto", DbType="NVarChar(250)")]
		public string UserPhoto
		{
			get
			{
				return this._UserPhoto;
			}
			set
			{
				if ((this._UserPhoto != value))
				{
					this.OnUserPhotoChanging(value);
					this.SendPropertyChanging();
					this._UserPhoto = value;
					this.SendPropertyChanged("UserPhoto");
					this.OnUserPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="VarChar(70)")]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(50)")]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMobileNumber", DbType="NVarChar(50)")]
		public string UserMobileNumber
		{
			get
			{
				return this._UserMobileNumber;
			}
			set
			{
				if ((this._UserMobileNumber != value))
				{
					this.OnUserMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._UserMobileNumber = value;
					this.SendPropertyChanged("UserMobileNumber");
					this.OnUserMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPN", DbType="Int")]
		public System.Nullable<int> UserPN
		{
			get
			{
				return this._UserPN;
			}
			set
			{
				if ((this._UserPN != value))
				{
					this.OnUserPNChanging(value);
					this.SendPropertyChanging();
					this._UserPN = value;
					this.SendPropertyChanged("UserPN");
					this.OnUserPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddress", DbType="NVarChar(70)")]
		public string UserAddress
		{
			get
			{
				return this._UserAddress;
			}
			set
			{
				if ((this._UserAddress != value))
				{
					this.OnUserAddressChanging(value);
					this.SendPropertyChanging();
					this._UserAddress = value;
					this.SendPropertyChanged("UserAddress");
					this.OnUserAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserBirthDay", DbType="Date")]
		public System.Nullable<System.DateTime> UserBirthDay
		{
			get
			{
				return this._UserBirthDay;
			}
			set
			{
				if ((this._UserBirthDay != value))
				{
					this.OnUserBirthDayChanging(value);
					this.SendPropertyChanging();
					this._UserBirthDay = value;
					this.SendPropertyChanged("UserBirthDay");
					this.OnUserBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtUser_ExtUser_Category", Storage="_ExtUser_Categories", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<ExtUser_Category> ExtUser_Categories
		{
			get
			{
				return this._ExtUser_Categories;
			}
			set
			{
				this._ExtUser_Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtUser_Subject_Lecturer", Storage="_ExtSubject_Lecturers", ThisKey="UserID", OtherKey="LecturerID")]
		public EntitySet<ExtSubject_Lecturer> ExtSubject_Lecturers
		{
			get
			{
				return this._ExtSubject_Lecturers;
			}
			set
			{
				this._ExtSubject_Lecturers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtUser_Course_MainLecturer", Storage="_Course_MainLecturers", ThisKey="UserID", OtherKey="LecturerID")]
		public EntitySet<Course_MainLecturer> Course_MainLecturers
		{
			get
			{
				return this._Course_MainLecturers;
			}
			set
			{
				this._Course_MainLecturers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExtUser_Categories(ExtUser_Category entity)
		{
			this.SendPropertyChanging();
			entity.ExtUser = this;
		}
		
		private void detach_ExtUser_Categories(ExtUser_Category entity)
		{
			this.SendPropertyChanging();
			entity.ExtUser = null;
		}
		
		private void attach_ExtSubject_Lecturers(ExtSubject_Lecturer entity)
		{
			this.SendPropertyChanging();
			entity.ExtUser = this;
		}
		
		private void detach_ExtSubject_Lecturers(ExtSubject_Lecturer entity)
		{
			this.SendPropertyChanging();
			entity.ExtUser = null;
		}
		
		private void attach_Course_MainLecturers(Course_MainLecturer entity)
		{
			this.SendPropertyChanging();
			entity.ExtUser = this;
		}
		
		private void detach_Course_MainLecturers(Course_MainLecturer entity)
		{
			this.SendPropertyChanging();
			entity.ExtUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Category")]
	public partial class ExtUser_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_CategoryID;
		
		private int _UserID;
		
		private int _UserCategoryID;
		
		private string _Direction;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<ExtUser> _ExtUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_CategoryIDChanging(int value);
    partial void OnUser_CategoryIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserCategoryIDChanging(int value);
    partial void OnUserCategoryIDChanged();
    partial void OnDirectionChanging(string value);
    partial void OnDirectionChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public ExtUser_Category()
		{
			this._ExtUser = default(EntityRef<ExtUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_CategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_CategoryID
		{
			get
			{
				return this._User_CategoryID;
			}
			set
			{
				if ((this._User_CategoryID != value))
				{
					this.OnUser_CategoryIDChanging(value);
					this.SendPropertyChanging();
					this._User_CategoryID = value;
					this.SendPropertyChanged("User_CategoryID");
					this.OnUser_CategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._ExtUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCategoryID", DbType="Int NOT NULL")]
		public int UserCategoryID
		{
			get
			{
				return this._UserCategoryID;
			}
			set
			{
				if ((this._UserCategoryID != value))
				{
					this.OnUserCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._UserCategoryID = value;
					this.SendPropertyChanged("UserCategoryID");
					this.OnUserCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="NVarChar(150)")]
		public string Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtUser_ExtUser_Category", Storage="_ExtUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public ExtUser ExtUser
		{
			get
			{
				return this._ExtUser.Entity;
			}
			set
			{
				ExtUser previousValue = this._ExtUser.Entity;
				if (((previousValue != value) 
							|| (this._ExtUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtUser.Entity = null;
						previousValue.ExtUser_Categories.Remove(this);
					}
					this._ExtUser.Entity = value;
					if ((value != null))
					{
						value.ExtUser_Categories.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("ExtUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Directions")]
	public partial class ExtDirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DirectionID;
		
		private string _DirectionName;
		
		private string _DirectionDescription;
		
		private string _DirectionMiniDesc;
		
		private string _DirMiniDescAuthor;
		
		private string _DirectionPhoto;
		
		private EntitySet<ExtDirection_Tran> _ExtDirection_Trans;
		
		private EntitySet<ExtCourse> _ExtCourses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnDirectionNameChanging(string value);
    partial void OnDirectionNameChanged();
    partial void OnDirectionDescriptionChanging(string value);
    partial void OnDirectionDescriptionChanged();
    partial void OnDirectionMiniDescChanging(string value);
    partial void OnDirectionMiniDescChanged();
    partial void OnDirMiniDescAuthorChanging(string value);
    partial void OnDirMiniDescAuthorChanged();
    partial void OnDirectionPhotoChanging(string value);
    partial void OnDirectionPhotoChanged();
    #endregion
		
		public ExtDirection()
		{
			this._ExtDirection_Trans = new EntitySet<ExtDirection_Tran>(new Action<ExtDirection_Tran>(this.attach_ExtDirection_Trans), new Action<ExtDirection_Tran>(this.detach_ExtDirection_Trans));
			this._ExtCourses = new EntitySet<ExtCourse>(new Action<ExtCourse>(this.attach_ExtCourses), new Action<ExtCourse>(this.detach_ExtCourses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string DirectionName
		{
			get
			{
				return this._DirectionName;
			}
			set
			{
				if ((this._DirectionName != value))
				{
					this.OnDirectionNameChanging(value);
					this.SendPropertyChanging();
					this._DirectionName = value;
					this.SendPropertyChanged("DirectionName");
					this.OnDirectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DirectionDescription
		{
			get
			{
				return this._DirectionDescription;
			}
			set
			{
				if ((this._DirectionDescription != value))
				{
					this.OnDirectionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DirectionDescription = value;
					this.SendPropertyChanged("DirectionDescription");
					this.OnDirectionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionMiniDesc", DbType="NVarChar(250)")]
		public string DirectionMiniDesc
		{
			get
			{
				return this._DirectionMiniDesc;
			}
			set
			{
				if ((this._DirectionMiniDesc != value))
				{
					this.OnDirectionMiniDescChanging(value);
					this.SendPropertyChanging();
					this._DirectionMiniDesc = value;
					this.SendPropertyChanged("DirectionMiniDesc");
					this.OnDirectionMiniDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirMiniDescAuthor", DbType="NVarChar(150)")]
		public string DirMiniDescAuthor
		{
			get
			{
				return this._DirMiniDescAuthor;
			}
			set
			{
				if ((this._DirMiniDescAuthor != value))
				{
					this.OnDirMiniDescAuthorChanging(value);
					this.SendPropertyChanging();
					this._DirMiniDescAuthor = value;
					this.SendPropertyChanged("DirMiniDescAuthor");
					this.OnDirMiniDescAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionPhoto", DbType="NVarChar(250)")]
		public string DirectionPhoto
		{
			get
			{
				return this._DirectionPhoto;
			}
			set
			{
				if ((this._DirectionPhoto != value))
				{
					this.OnDirectionPhotoChanging(value);
					this.SendPropertyChanging();
					this._DirectionPhoto = value;
					this.SendPropertyChanged("DirectionPhoto");
					this.OnDirectionPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtDirection_ExtDirection_Tran", Storage="_ExtDirection_Trans", ThisKey="DirectionID", OtherKey="DirectionID")]
		public EntitySet<ExtDirection_Tran> ExtDirection_Trans
		{
			get
			{
				return this._ExtDirection_Trans;
			}
			set
			{
				this._ExtDirection_Trans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtDirection_ExtCourse", Storage="_ExtCourses", ThisKey="DirectionID", OtherKey="CourseDirectionID")]
		public EntitySet<ExtCourse> ExtCourses
		{
			get
			{
				return this._ExtCourses;
			}
			set
			{
				this._ExtCourses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExtDirection_Trans(ExtDirection_Tran entity)
		{
			this.SendPropertyChanging();
			entity.ExtDirection = this;
		}
		
		private void detach_ExtDirection_Trans(ExtDirection_Tran entity)
		{
			this.SendPropertyChanging();
			entity.ExtDirection = null;
		}
		
		private void attach_ExtCourses(ExtCourse entity)
		{
			this.SendPropertyChanging();
			entity.ExtDirection = this;
		}
		
		private void detach_ExtCourses(ExtCourse entity)
		{
			this.SendPropertyChanging();
			entity.ExtDirection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Direction_Trans")]
	public partial class ExtDirection_Tran : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DirectionTransID;
		
		private int _DirectionID;
		
		private string _LanguageCode;
		
		private string _DirectionName;
		
		private string _DirectionDescription;
		
		private string _DirectionMiniDesc;
		
		private string _DirMiniDescAuthor;
		
		private EntityRef<ExtDirection> _ExtDirection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDirectionTransIDChanging(int value);
    partial void OnDirectionTransIDChanged();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnDirectionNameChanging(string value);
    partial void OnDirectionNameChanged();
    partial void OnDirectionDescriptionChanging(string value);
    partial void OnDirectionDescriptionChanged();
    partial void OnDirectionMiniDescChanging(string value);
    partial void OnDirectionMiniDescChanged();
    partial void OnDirMiniDescAuthorChanging(string value);
    partial void OnDirMiniDescAuthorChanged();
    #endregion
		
		public ExtDirection_Tran()
		{
			this._ExtDirection = default(EntityRef<ExtDirection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionTransID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DirectionTransID
		{
			get
			{
				return this._DirectionTransID;
			}
			set
			{
				if ((this._DirectionTransID != value))
				{
					this.OnDirectionTransIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionTransID = value;
					this.SendPropertyChanged("DirectionTransID");
					this.OnDirectionTransIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					if (this._ExtDirection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionName", DbType="NVarChar(70) NOT NULL", CanBeNull=false)]
		public string DirectionName
		{
			get
			{
				return this._DirectionName;
			}
			set
			{
				if ((this._DirectionName != value))
				{
					this.OnDirectionNameChanging(value);
					this.SendPropertyChanging();
					this._DirectionName = value;
					this.SendPropertyChanged("DirectionName");
					this.OnDirectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DirectionDescription
		{
			get
			{
				return this._DirectionDescription;
			}
			set
			{
				if ((this._DirectionDescription != value))
				{
					this.OnDirectionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DirectionDescription = value;
					this.SendPropertyChanged("DirectionDescription");
					this.OnDirectionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionMiniDesc", DbType="NVarChar(250)")]
		public string DirectionMiniDesc
		{
			get
			{
				return this._DirectionMiniDesc;
			}
			set
			{
				if ((this._DirectionMiniDesc != value))
				{
					this.OnDirectionMiniDescChanging(value);
					this.SendPropertyChanging();
					this._DirectionMiniDesc = value;
					this.SendPropertyChanged("DirectionMiniDesc");
					this.OnDirectionMiniDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirMiniDescAuthor", DbType="NVarChar(150)")]
		public string DirMiniDescAuthor
		{
			get
			{
				return this._DirMiniDescAuthor;
			}
			set
			{
				if ((this._DirMiniDescAuthor != value))
				{
					this.OnDirMiniDescAuthorChanging(value);
					this.SendPropertyChanging();
					this._DirMiniDescAuthor = value;
					this.SendPropertyChanged("DirMiniDescAuthor");
					this.OnDirMiniDescAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtDirection_ExtDirection_Tran", Storage="_ExtDirection", ThisKey="DirectionID", OtherKey="DirectionID", IsForeignKey=true)]
		public ExtDirection ExtDirection
		{
			get
			{
				return this._ExtDirection.Entity;
			}
			set
			{
				ExtDirection previousValue = this._ExtDirection.Entity;
				if (((previousValue != value) 
							|| (this._ExtDirection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtDirection.Entity = null;
						previousValue.ExtDirection_Trans.Remove(this);
					}
					this._ExtDirection.Entity = value;
					if ((value != null))
					{
						value.ExtDirection_Trans.Add(this);
						this._DirectionID = value.DirectionID;
					}
					else
					{
						this._DirectionID = default(int);
					}
					this.SendPropertyChanged("ExtDirection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Courses")]
	public partial class ExtCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CourseID;
		
		private string _CourseName;
		
		private string _CourseDescription;
		
		private string _CoursePhoto;
		
		private int _CourseDirectionID;
		
		private int _CourseTypeID;
		
		private System.Nullable<int> _CourseDurationMonths;
		
		private System.Nullable<int> _CoursePriceGEL;
		
		private System.Nullable<int> _CourseMeetingsQuantity;
		
		private bool _isActive;
		
		private EntitySet<ExtCourse_Tran> _ExtCourse_Trans;
		
		private EntitySet<ExtCourse_Subject> _ExtCourse_Subjects;
		
		private EntitySet<Course_MainLecturer> _Course_MainLecturers;
		
		private EntityRef<ExtDirection> _ExtDirection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnCourseDescriptionChanging(string value);
    partial void OnCourseDescriptionChanged();
    partial void OnCoursePhotoChanging(string value);
    partial void OnCoursePhotoChanged();
    partial void OnCourseDirectionIDChanging(int value);
    partial void OnCourseDirectionIDChanged();
    partial void OnCourseTypeIDChanging(int value);
    partial void OnCourseTypeIDChanged();
    partial void OnCourseDurationMonthsChanging(System.Nullable<int> value);
    partial void OnCourseDurationMonthsChanged();
    partial void OnCoursePriceGELChanging(System.Nullable<int> value);
    partial void OnCoursePriceGELChanged();
    partial void OnCourseMeetingsQuantityChanging(System.Nullable<int> value);
    partial void OnCourseMeetingsQuantityChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    #endregion
		
		public ExtCourse()
		{
			this._ExtCourse_Trans = new EntitySet<ExtCourse_Tran>(new Action<ExtCourse_Tran>(this.attach_ExtCourse_Trans), new Action<ExtCourse_Tran>(this.detach_ExtCourse_Trans));
			this._ExtCourse_Subjects = new EntitySet<ExtCourse_Subject>(new Action<ExtCourse_Subject>(this.attach_ExtCourse_Subjects), new Action<ExtCourse_Subject>(this.detach_ExtCourse_Subjects));
			this._Course_MainLecturers = new EntitySet<Course_MainLecturer>(new Action<Course_MainLecturer>(this.attach_Course_MainLecturers), new Action<Course_MainLecturer>(this.detach_Course_MainLecturers));
			this._ExtDirection = default(EntityRef<ExtDirection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CourseDescription
		{
			get
			{
				return this._CourseDescription;
			}
			set
			{
				if ((this._CourseDescription != value))
				{
					this.OnCourseDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CourseDescription = value;
					this.SendPropertyChanged("CourseDescription");
					this.OnCourseDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoursePhoto", DbType="NVarChar(250)")]
		public string CoursePhoto
		{
			get
			{
				return this._CoursePhoto;
			}
			set
			{
				if ((this._CoursePhoto != value))
				{
					this.OnCoursePhotoChanging(value);
					this.SendPropertyChanging();
					this._CoursePhoto = value;
					this.SendPropertyChanged("CoursePhoto");
					this.OnCoursePhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDirectionID", DbType="Int NOT NULL")]
		public int CourseDirectionID
		{
			get
			{
				return this._CourseDirectionID;
			}
			set
			{
				if ((this._CourseDirectionID != value))
				{
					if (this._ExtDirection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._CourseDirectionID = value;
					this.SendPropertyChanged("CourseDirectionID");
					this.OnCourseDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTypeID", DbType="Int NOT NULL")]
		public int CourseTypeID
		{
			get
			{
				return this._CourseTypeID;
			}
			set
			{
				if ((this._CourseTypeID != value))
				{
					this.OnCourseTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTypeID = value;
					this.SendPropertyChanged("CourseTypeID");
					this.OnCourseTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDurationMonths", DbType="Int")]
		public System.Nullable<int> CourseDurationMonths
		{
			get
			{
				return this._CourseDurationMonths;
			}
			set
			{
				if ((this._CourseDurationMonths != value))
				{
					this.OnCourseDurationMonthsChanging(value);
					this.SendPropertyChanging();
					this._CourseDurationMonths = value;
					this.SendPropertyChanged("CourseDurationMonths");
					this.OnCourseDurationMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoursePriceGEL", DbType="Int")]
		public System.Nullable<int> CoursePriceGEL
		{
			get
			{
				return this._CoursePriceGEL;
			}
			set
			{
				if ((this._CoursePriceGEL != value))
				{
					this.OnCoursePriceGELChanging(value);
					this.SendPropertyChanging();
					this._CoursePriceGEL = value;
					this.SendPropertyChanged("CoursePriceGEL");
					this.OnCoursePriceGELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseMeetingsQuantity", DbType="Int")]
		public System.Nullable<int> CourseMeetingsQuantity
		{
			get
			{
				return this._CourseMeetingsQuantity;
			}
			set
			{
				if ((this._CourseMeetingsQuantity != value))
				{
					this.OnCourseMeetingsQuantityChanging(value);
					this.SendPropertyChanging();
					this._CourseMeetingsQuantity = value;
					this.SendPropertyChanged("CourseMeetingsQuantity");
					this.OnCourseMeetingsQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtCourse_ExtCourse_Tran", Storage="_ExtCourse_Trans", ThisKey="CourseID", OtherKey="CourseID")]
		public EntitySet<ExtCourse_Tran> ExtCourse_Trans
		{
			get
			{
				return this._ExtCourse_Trans;
			}
			set
			{
				this._ExtCourse_Trans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtCourse_ExtCourse_Subject", Storage="_ExtCourse_Subjects", ThisKey="CourseID", OtherKey="CourseID")]
		public EntitySet<ExtCourse_Subject> ExtCourse_Subjects
		{
			get
			{
				return this._ExtCourse_Subjects;
			}
			set
			{
				this._ExtCourse_Subjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtCourse_Course_MainLecturer", Storage="_Course_MainLecturers", ThisKey="CourseID", OtherKey="CourseID")]
		public EntitySet<Course_MainLecturer> Course_MainLecturers
		{
			get
			{
				return this._Course_MainLecturers;
			}
			set
			{
				this._Course_MainLecturers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtDirection_ExtCourse", Storage="_ExtDirection", ThisKey="CourseDirectionID", OtherKey="DirectionID", IsForeignKey=true)]
		public ExtDirection ExtDirection
		{
			get
			{
				return this._ExtDirection.Entity;
			}
			set
			{
				ExtDirection previousValue = this._ExtDirection.Entity;
				if (((previousValue != value) 
							|| (this._ExtDirection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtDirection.Entity = null;
						previousValue.ExtCourses.Remove(this);
					}
					this._ExtDirection.Entity = value;
					if ((value != null))
					{
						value.ExtCourses.Add(this);
						this._CourseDirectionID = value.DirectionID;
					}
					else
					{
						this._CourseDirectionID = default(int);
					}
					this.SendPropertyChanged("ExtDirection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExtCourse_Trans(ExtCourse_Tran entity)
		{
			this.SendPropertyChanging();
			entity.ExtCourse = this;
		}
		
		private void detach_ExtCourse_Trans(ExtCourse_Tran entity)
		{
			this.SendPropertyChanging();
			entity.ExtCourse = null;
		}
		
		private void attach_ExtCourse_Subjects(ExtCourse_Subject entity)
		{
			this.SendPropertyChanging();
			entity.ExtCourse = this;
		}
		
		private void detach_ExtCourse_Subjects(ExtCourse_Subject entity)
		{
			this.SendPropertyChanging();
			entity.ExtCourse = null;
		}
		
		private void attach_Course_MainLecturers(Course_MainLecturer entity)
		{
			this.SendPropertyChanging();
			entity.ExtCourse = this;
		}
		
		private void detach_Course_MainLecturers(Course_MainLecturer entity)
		{
			this.SendPropertyChanging();
			entity.ExtCourse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course_Trans")]
	public partial class ExtCourse_Tran : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CourseTransID;
		
		private int _CourseID;
		
		private string _LanguageCode;
		
		private string _CourseName;
		
		private string _CourseDescription;
		
		private EntityRef<ExtCourse> _ExtCourse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseTransIDChanging(int value);
    partial void OnCourseTransIDChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnCourseDescriptionChanging(string value);
    partial void OnCourseDescriptionChanged();
    #endregion
		
		public ExtCourse_Tran()
		{
			this._ExtCourse = default(EntityRef<ExtCourse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTransID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CourseTransID
		{
			get
			{
				return this._CourseTransID;
			}
			set
			{
				if ((this._CourseTransID != value))
				{
					this.OnCourseTransIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTransID = value;
					this.SendPropertyChanged("CourseTransID");
					this.OnCourseTransIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL")]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._ExtCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CourseDescription
		{
			get
			{
				return this._CourseDescription;
			}
			set
			{
				if ((this._CourseDescription != value))
				{
					this.OnCourseDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CourseDescription = value;
					this.SendPropertyChanged("CourseDescription");
					this.OnCourseDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtCourse_ExtCourse_Tran", Storage="_ExtCourse", ThisKey="CourseID", OtherKey="CourseID", IsForeignKey=true)]
		public ExtCourse ExtCourse
		{
			get
			{
				return this._ExtCourse.Entity;
			}
			set
			{
				ExtCourse previousValue = this._ExtCourse.Entity;
				if (((previousValue != value) 
							|| (this._ExtCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtCourse.Entity = null;
						previousValue.ExtCourse_Trans.Remove(this);
					}
					this._ExtCourse.Entity = value;
					if ((value != null))
					{
						value.ExtCourse_Trans.Add(this);
						this._CourseID = value.CourseID;
					}
					else
					{
						this._CourseID = default(int);
					}
					this.SendPropertyChanged("ExtCourse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject_Trans")]
	public partial class ExtSubject_Tran : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SubjectID;
		
		private string _LanguageCode;
		
		private string _Name;
		
		private EntityRef<ExtSubject> _ExtSubject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ExtSubject_Tran()
		{
			this._ExtSubject = default(EntityRef<ExtSubject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._ExtSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtSubject_ExtSubject_Tran", Storage="_ExtSubject", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public ExtSubject ExtSubject
		{
			get
			{
				return this._ExtSubject.Entity;
			}
			set
			{
				ExtSubject previousValue = this._ExtSubject.Entity;
				if (((previousValue != value) 
							|| (this._ExtSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtSubject.Entity = null;
						previousValue.ExtSubject_Trans.Remove(this);
					}
					this._ExtSubject.Entity = value;
					if ((value != null))
					{
						value.ExtSubject_Trans.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(int);
					}
					this.SendPropertyChanged("ExtSubject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subjects")]
	public partial class ExtSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectID;
		
		private string _SubjectName;
		
		private string _SubjectDescription;
		
		private string _SubjectPhoto;
		
		private string _SubjectSyllabus;
		
		private string _SubjectPlaylist;
		
		private EntitySet<ExtSubject_Tran> _ExtSubject_Trans;
		
		private EntitySet<ExtCourse_Subject> _ExtCourse_Subjects;
		
		private EntitySet<ExtSubject_Lecturer> _ExtSubject_Lecturers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    partial void OnSubjectDescriptionChanging(string value);
    partial void OnSubjectDescriptionChanged();
    partial void OnSubjectPhotoChanging(string value);
    partial void OnSubjectPhotoChanged();
    partial void OnSubjectSyllabusChanging(string value);
    partial void OnSubjectSyllabusChanged();
    partial void OnSubjectPlaylistChanging(string value);
    partial void OnSubjectPlaylistChanged();
    #endregion
		
		public ExtSubject()
		{
			this._ExtSubject_Trans = new EntitySet<ExtSubject_Tran>(new Action<ExtSubject_Tran>(this.attach_ExtSubject_Trans), new Action<ExtSubject_Tran>(this.detach_ExtSubject_Trans));
			this._ExtCourse_Subjects = new EntitySet<ExtCourse_Subject>(new Action<ExtCourse_Subject>(this.attach_ExtCourse_Subjects), new Action<ExtCourse_Subject>(this.detach_ExtCourse_Subjects));
			this._ExtSubject_Lecturers = new EntitySet<ExtSubject_Lecturer>(new Action<ExtSubject_Lecturer>(this.attach_ExtSubject_Lecturers), new Action<ExtSubject_Lecturer>(this.detach_ExtSubject_Lecturers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this.OnSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectName = value;
					this.SendPropertyChanged("SubjectName");
					this.OnSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SubjectDescription
		{
			get
			{
				return this._SubjectDescription;
			}
			set
			{
				if ((this._SubjectDescription != value))
				{
					this.OnSubjectDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SubjectDescription = value;
					this.SendPropertyChanged("SubjectDescription");
					this.OnSubjectDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectPhoto", DbType="NVarChar(250)")]
		public string SubjectPhoto
		{
			get
			{
				return this._SubjectPhoto;
			}
			set
			{
				if ((this._SubjectPhoto != value))
				{
					this.OnSubjectPhotoChanging(value);
					this.SendPropertyChanging();
					this._SubjectPhoto = value;
					this.SendPropertyChanged("SubjectPhoto");
					this.OnSubjectPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectSyllabus", DbType="NVarChar(250)")]
		public string SubjectSyllabus
		{
			get
			{
				return this._SubjectSyllabus;
			}
			set
			{
				if ((this._SubjectSyllabus != value))
				{
					this.OnSubjectSyllabusChanging(value);
					this.SendPropertyChanging();
					this._SubjectSyllabus = value;
					this.SendPropertyChanged("SubjectSyllabus");
					this.OnSubjectSyllabusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectPlaylist", DbType="NVarChar(250)")]
		public string SubjectPlaylist
		{
			get
			{
				return this._SubjectPlaylist;
			}
			set
			{
				if ((this._SubjectPlaylist != value))
				{
					this.OnSubjectPlaylistChanging(value);
					this.SendPropertyChanging();
					this._SubjectPlaylist = value;
					this.SendPropertyChanged("SubjectPlaylist");
					this.OnSubjectPlaylistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtSubject_ExtSubject_Tran", Storage="_ExtSubject_Trans", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<ExtSubject_Tran> ExtSubject_Trans
		{
			get
			{
				return this._ExtSubject_Trans;
			}
			set
			{
				this._ExtSubject_Trans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtSubject_ExtCourse_Subject", Storage="_ExtCourse_Subjects", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<ExtCourse_Subject> ExtCourse_Subjects
		{
			get
			{
				return this._ExtCourse_Subjects;
			}
			set
			{
				this._ExtCourse_Subjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtSubject_Subject_Lecturer", Storage="_ExtSubject_Lecturers", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<ExtSubject_Lecturer> ExtSubject_Lecturers
		{
			get
			{
				return this._ExtSubject_Lecturers;
			}
			set
			{
				this._ExtSubject_Lecturers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExtSubject_Trans(ExtSubject_Tran entity)
		{
			this.SendPropertyChanging();
			entity.ExtSubject = this;
		}
		
		private void detach_ExtSubject_Trans(ExtSubject_Tran entity)
		{
			this.SendPropertyChanging();
			entity.ExtSubject = null;
		}
		
		private void attach_ExtCourse_Subjects(ExtCourse_Subject entity)
		{
			this.SendPropertyChanging();
			entity.ExtSubject = this;
		}
		
		private void detach_ExtCourse_Subjects(ExtCourse_Subject entity)
		{
			this.SendPropertyChanging();
			entity.ExtSubject = null;
		}
		
		private void attach_ExtSubject_Lecturers(ExtSubject_Lecturer entity)
		{
			this.SendPropertyChanging();
			entity.ExtSubject = this;
		}
		
		private void detach_ExtSubject_Lecturers(ExtSubject_Lecturer entity)
		{
			this.SendPropertyChanging();
			entity.ExtSubject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course_Subject")]
	public partial class ExtCourse_Subject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Course_SubjectID;
		
		private int _CourseID;
		
		private int _SubjectID;
		
		private EntityRef<ExtCourse> _ExtCourse;
		
		private EntityRef<ExtSubject> _ExtSubject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourse_SubjectIDChanging(int value);
    partial void OnCourse_SubjectIDChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    #endregion
		
		public ExtCourse_Subject()
		{
			this._ExtCourse = default(EntityRef<ExtCourse>);
			this._ExtSubject = default(EntityRef<ExtSubject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_SubjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Course_SubjectID
		{
			get
			{
				return this._Course_SubjectID;
			}
			set
			{
				if ((this._Course_SubjectID != value))
				{
					this.OnCourse_SubjectIDChanging(value);
					this.SendPropertyChanging();
					this._Course_SubjectID = value;
					this.SendPropertyChanged("Course_SubjectID");
					this.OnCourse_SubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL")]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._ExtCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._ExtSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtCourse_ExtCourse_Subject", Storage="_ExtCourse", ThisKey="CourseID", OtherKey="CourseID", IsForeignKey=true)]
		public ExtCourse ExtCourse
		{
			get
			{
				return this._ExtCourse.Entity;
			}
			set
			{
				ExtCourse previousValue = this._ExtCourse.Entity;
				if (((previousValue != value) 
							|| (this._ExtCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtCourse.Entity = null;
						previousValue.ExtCourse_Subjects.Remove(this);
					}
					this._ExtCourse.Entity = value;
					if ((value != null))
					{
						value.ExtCourse_Subjects.Add(this);
						this._CourseID = value.CourseID;
					}
					else
					{
						this._CourseID = default(int);
					}
					this.SendPropertyChanged("ExtCourse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtSubject_ExtCourse_Subject", Storage="_ExtSubject", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public ExtSubject ExtSubject
		{
			get
			{
				return this._ExtSubject.Entity;
			}
			set
			{
				ExtSubject previousValue = this._ExtSubject.Entity;
				if (((previousValue != value) 
							|| (this._ExtSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtSubject.Entity = null;
						previousValue.ExtCourse_Subjects.Remove(this);
					}
					this._ExtSubject.Entity = value;
					if ((value != null))
					{
						value.ExtCourse_Subjects.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(int);
					}
					this.SendPropertyChanged("ExtSubject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject_Lecturer")]
	public partial class ExtSubject_Lecturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Subject_LecturerID;
		
		private int _SubjectID;
		
		private int _LecturerID;
		
		private EntityRef<ExtSubject> _ExtSubject;
		
		private EntityRef<ExtUser> _ExtUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubject_LecturerIDChanging(int value);
    partial void OnSubject_LecturerIDChanged();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    partial void OnLecturerIDChanging(int value);
    partial void OnLecturerIDChanged();
    #endregion
		
		public ExtSubject_Lecturer()
		{
			this._ExtSubject = default(EntityRef<ExtSubject>);
			this._ExtUser = default(EntityRef<ExtUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject_LecturerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Subject_LecturerID
		{
			get
			{
				return this._Subject_LecturerID;
			}
			set
			{
				if ((this._Subject_LecturerID != value))
				{
					this.OnSubject_LecturerIDChanging(value);
					this.SendPropertyChanging();
					this._Subject_LecturerID = value;
					this.SendPropertyChanged("Subject_LecturerID");
					this.OnSubject_LecturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._ExtSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LecturerID", DbType="Int NOT NULL")]
		public int LecturerID
		{
			get
			{
				return this._LecturerID;
			}
			set
			{
				if ((this._LecturerID != value))
				{
					if (this._ExtUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLecturerIDChanging(value);
					this.SendPropertyChanging();
					this._LecturerID = value;
					this.SendPropertyChanged("LecturerID");
					this.OnLecturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtSubject_Subject_Lecturer", Storage="_ExtSubject", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public ExtSubject ExtSubject
		{
			get
			{
				return this._ExtSubject.Entity;
			}
			set
			{
				ExtSubject previousValue = this._ExtSubject.Entity;
				if (((previousValue != value) 
							|| (this._ExtSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtSubject.Entity = null;
						previousValue.ExtSubject_Lecturers.Remove(this);
					}
					this._ExtSubject.Entity = value;
					if ((value != null))
					{
						value.ExtSubject_Lecturers.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(int);
					}
					this.SendPropertyChanged("ExtSubject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtUser_Subject_Lecturer", Storage="_ExtUser", ThisKey="LecturerID", OtherKey="UserID", IsForeignKey=true)]
		public ExtUser ExtUser
		{
			get
			{
				return this._ExtUser.Entity;
			}
			set
			{
				ExtUser previousValue = this._ExtUser.Entity;
				if (((previousValue != value) 
							|| (this._ExtUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtUser.Entity = null;
						previousValue.ExtSubject_Lecturers.Remove(this);
					}
					this._ExtUser.Entity = value;
					if ((value != null))
					{
						value.ExtSubject_Lecturers.Add(this);
						this._LecturerID = value.UserID;
					}
					else
					{
						this._LecturerID = default(int);
					}
					this.SendPropertyChanged("ExtUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course_MainLecturer")]
	public partial class Course_MainLecturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CourseID;
		
		private int _LecturerID;
		
		private EntityRef<ExtCourse> _ExtCourse;
		
		private EntityRef<ExtUser> _ExtUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnLecturerIDChanging(int value);
    partial void OnLecturerIDChanged();
    #endregion
		
		public Course_MainLecturer()
		{
			this._ExtCourse = default(EntityRef<ExtCourse>);
			this._ExtUser = default(EntityRef<ExtUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL")]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					if (this._ExtCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LecturerID", DbType="Int NOT NULL")]
		public int LecturerID
		{
			get
			{
				return this._LecturerID;
			}
			set
			{
				if ((this._LecturerID != value))
				{
					if (this._ExtUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLecturerIDChanging(value);
					this.SendPropertyChanging();
					this._LecturerID = value;
					this.SendPropertyChanged("LecturerID");
					this.OnLecturerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtCourse_Course_MainLecturer", Storage="_ExtCourse", ThisKey="CourseID", OtherKey="CourseID", IsForeignKey=true)]
		public ExtCourse ExtCourse
		{
			get
			{
				return this._ExtCourse.Entity;
			}
			set
			{
				ExtCourse previousValue = this._ExtCourse.Entity;
				if (((previousValue != value) 
							|| (this._ExtCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtCourse.Entity = null;
						previousValue.Course_MainLecturers.Remove(this);
					}
					this._ExtCourse.Entity = value;
					if ((value != null))
					{
						value.Course_MainLecturers.Add(this);
						this._CourseID = value.CourseID;
					}
					else
					{
						this._CourseID = default(int);
					}
					this.SendPropertyChanged("ExtCourse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtUser_Course_MainLecturer", Storage="_ExtUser", ThisKey="LecturerID", OtherKey="UserID", IsForeignKey=true)]
		public ExtUser ExtUser
		{
			get
			{
				return this._ExtUser.Entity;
			}
			set
			{
				ExtUser previousValue = this._ExtUser.Entity;
				if (((previousValue != value) 
							|| (this._ExtUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtUser.Entity = null;
						previousValue.Course_MainLecturers.Remove(this);
					}
					this._ExtUser.Entity = value;
					if ((value != null))
					{
						value.Course_MainLecturers.Add(this);
						this._LecturerID = value.UserID;
					}
					else
					{
						this._LecturerID = default(int);
					}
					this.SendPropertyChanged("ExtUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
